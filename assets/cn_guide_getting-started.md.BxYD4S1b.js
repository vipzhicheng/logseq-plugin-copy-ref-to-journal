import{_ as a,c as l,o as i,a5 as e,a6 as o,a7 as t,a8 as r}from"./chunks/framework.ksaAMBJ7.js";const g=JSON.parse('{"title":"快速开始","description":"","frontmatter":{},"headers":[],"relativePath":"cn/guide/getting-started.md","filePath":"cn/guide/getting-started.md"}'),c={name:"cn/guide/getting-started.md"},s=e('<h1 id="快速开始" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始" aria-label="Permalink to &quot;快速开始&quot;">​</a></h1><p>欢迎安装并尝试使用 Logseq Move Block。这是一个简单的说明，让你快速理解和开始使用。</p><h2 id="是什么" tabindex="-1">是什么 <a class="header-anchor" href="#是什么" aria-label="Permalink to &quot;是什么&quot;">​</a></h2><p>Logseq Move Block 是一个 Logseq 插件，用于在 Logseq 中自由的移动 Block。由于 Logseq 是一个大纲笔记软件，所以你会有越来越多的 Block。远比你的页面要多。所以你通常会有整理的需求，也就是将这些 Block 来回移动，复制，引用，或者嵌入。使用 Move Block 插件，你可以很轻松的做这些操作。</p><p>使用场景：</p><ol><li>使用 Namespace 将一个很长的页面改成嵌套页面。</li><li>将部分内容从日历页面移动到某个项目页面，并在日历页面保留引用。或者反过来。</li><li>将部分内容从页面的中间移动到当前页面的顶部或者底部。</li><li>...</li></ol><h2 id="特性" tabindex="-1">特性 <a class="header-anchor" href="#特性" aria-label="Permalink to &quot;特性&quot;">​</a></h2><ul><li>支持 Slash Command</li><li>支持 Context Command</li><li>支持快捷键</li><li>支持页面右上角图标按钮</li><li>支持移动到任意日历和页面</li><li>支持移动到顶部或底部</li><li>支持复制和移动，并保留引用或者嵌入</li><li>支持停留在原来的页面或者跳转到目标页面</li><li>支持保留操作历史，支持收藏常用操作</li></ul><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><h3 id="插件市场" tabindex="-1">插件市场 <a class="header-anchor" href="#插件市场" aria-label="Permalink to &quot;插件市场&quot;">​</a></h3><p>在插件市场中搜索它，并从那里进行安装。</p><h3 id="手动安装" tabindex="-1">手动安装 <a class="header-anchor" href="#手动安装" aria-label="Permalink to &quot;手动安装&quot;">​</a></h3><ol><li>从发布页面下载最新的 zip 文件。</li><li>将 zip 文件解压缩到您想要存储插件的文件夹中。</li><li>在 Logseq 中打开开发者模式。</li><li>通过点击插件模态框上的“加载未打包插件”按钮，加载解压缩后的文件夹</li><li>您现在应该能看到插件已经被安装。</li></ol><h2 id="快速开始-1" tabindex="-1">快速开始 <a class="header-anchor" href="#快速开始-1" aria-label="Permalink to &quot;快速开始&quot;">​</a></h2><ol><li>光标放在要操作的 Block 上。</li><li>通过快捷键或者 Context Command，Slash Command, 或者插件右上角图标按钮，打开配置窗口。</li><li>根据需求选择合适的选项。</li><li>点击 OK 执行。</li><li>下次如果有类似的操作需求，直接从收藏夹或者操作历史中快速选择。</li></ol><h2 id="关于多行和嵌套的注意事项" tabindex="-1">关于多行和嵌套的注意事项 <a class="header-anchor" href="#关于多行和嵌套的注意事项" aria-label="Permalink to &quot;关于多行和嵌套的注意事项&quot;">​</a></h2><ol><li>由于 Logseq 本身的限制，如果是移动多行，在选中多行以后，只能通过快捷键触发操作窗口，才能继续完成多行移动，其他方式会退化成选择时选中的第一个 Block。</li><li>选择多行时，选择的顺序很重要，决定了操作的顺序，而不是实际在页面中呈现的顺序。</li><li>剪切操作支持嵌套 Block，但是复制操作不支持嵌套。所以这意味着如果是剪切，只要选择了根 Block，整个 Block 树都会被剪切过去，并且维持原来的结构，而如果是复制，则不会保持原来的结构，都会被拉平，需要在新的目标页面重新手动组织结构。从视觉上，除了要关注 Logseq 高亮的区域，还需要关注区块前面的小圆点是否变色。</li><li>剪切操作支持同时剪切多个嵌套 Block 树，也支持从一颗大 Block 树中剪切出多个 Block 子树，判断依据是选择高亮的 Block 之间的相互关系，只有连续的父子级关系才会认为是一颗树，如果中间断开或者本身是兄弟关系，则会被识别为是一个新的子树。小圆点未高亮的也可能因为父节点被选中而包含在剪切的树里。</li></ol><h3 id="举个例子" tabindex="-1">举个例子 <a class="header-anchor" href="#举个例子" aria-label="Permalink to &quot;举个例子&quot;">​</a></h3><p><img src="'+o+'" alt=""></p><p>这里看到高亮的区域是 <code>1,2,3,4,5,7,8,0</code>。其中小圆点高亮的只有<code>1，3，7，0</code>, 在这种情况下：</p><p>如果是复制，目标页将得到如下结果：</p><p><img src="'+t+'" alt=""></p><p>如果是剪切，目标页将得到如下结果：</p><p><img src="'+r+'" alt=""></p><p>可以看到，这里因为 7 和 0 之间的 8 没有被选中，所以 0 在剪切后作为了一颗新的子树，而 2，4，5 虽然没有被选中，但是，因为父节点被选中了，所以也一起被剪切了。</p><p>这个例子比较极端，是为了演示插件的处理逻辑，日常使用时，一般很少出现不连续的选择一起移动的情况。</p>',26),n=[s];function d(h,p,m,_,u,k){return i(),l("div",null,n)}const b=a(c,[["render",d]]);export{g as __pageData,b as default};
